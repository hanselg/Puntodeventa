//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2494
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2494.
// 
unit WsAutorizacionLaboratorio.WsAuthentication;

interface

uses System.Diagnostics, 
  System.Xml.Serialization, 
  System.Web.Services.Protocols, 
  System.ComponentModel, 
  System.Web.Services, System.Web.Services.Description;

type
  Afiliados = class;
  AutorizacionLaboratorio = class;
  Procedimiento = class;
  /// <remarks/>
  
  [System.Diagnostics.DebuggerStepThroughAttribute]
  [System.ComponentModel.DesignerCategoryAttribute('code')]
  [System.Web.Services.WebServiceBindingAttribute(Name='WSAuthenticationSoap', Namespace='h' +
  'ttp://arssenasa.tools.web.org/')]
  WSAuthentication = class(System.Web.Services.Protocols.SoapHttpClientProtocol)
    /// <remarks/>
  public
    constructor Create;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://arsse' +
    'nasa.tools.web.org/Validar', RequestNamespace='http://arssenasa.tools.w' +
    'eb.org/', ResponseNamespace='http://arssenasa.tools.web.org/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function Validar(cedula: string; UsuarioID: string; password: string): string;
    /// <remarks/>
    function BeginValidar(cedula: string; UsuarioID: string; password: string; 
      callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndValidar(asyncResult: System.IAsyncResult): string;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://arsse' +
    'nasa.tools.web.org/ConsultarAfiliado', RequestNamespace='http://arssena' +
    'sa.tools.web.org/', ResponseNamespace='http://arssenasa.tools.web.org/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function ConsultarAfiliado(TOKEN: string; TipoID: Integer; ID: string): Afiliados;
    /// <remarks/>
    function BeginConsultarAfiliado(TOKEN: string; TipoID: Integer; ID: string; 
      callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndConsultarAfiliado(asyncResult: System.IAsyncResult): Afiliados;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://arsse' +
    'nasa.tools.web.org/Generar', RequestNamespace='http://arssenasa.tools.w' +
    'eb.org/', ResponseNamespace='http://arssenasa.tools.web.org/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function Generar(TOKEN: string; DatosAutorizacion: AutorizacionLaboratorio): AutorizacionLaboratorio;
    /// <remarks/>
    function BeginGenerar(TOKEN: string; DatosAutorizacion: AutorizacionLaboratorio; 
      callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndGenerar(asyncResult: System.IAsyncResult): AutorizacionLaboratorio;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://arsse' +
    'nasa.tools.web.org/AgrearProcedimiento', RequestNamespace='http://arsse' +
    'nasa.tools.web.org/', ResponseNamespace='http://arssenasa.tools.web.org' +
    '/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function AgrearProcedimiento(TOKEN: string; oProcedimiento: Procedimiento; 
      var AutLaboratorio: AutorizacionLaboratorio): Boolean;
    /// <remarks/>
    function BeginAgrearProcedimiento(TOKEN: string; oProcedimiento: Procedimiento; 
      AutLaboratorio: AutorizacionLaboratorio; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndAgrearProcedimiento(asyncResult: System.IAsyncResult; out AutLaboratorio: AutorizacionLaboratorio): Boolean;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://arsse' +
    'nasa.tools.web.org/RemoverProcedimiento', RequestNamespace='http://arss' +
    'enasa.tools.web.org/', ResponseNamespace='http://arssenasa.tools.web.or' +
    'g/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function RemoverProcedimiento(TOKEN: string; oProcedimiento: Procedimiento; 
      var AutLaboratorio: AutorizacionLaboratorio): Boolean;
    /// <remarks/>
    function BeginRemoverProcedimiento(TOKEN: string; oProcedimiento: Procedimiento; 
      AutLaboratorio: AutorizacionLaboratorio; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndRemoverProcedimiento(asyncResult: System.IAsyncResult; out AutLaboratorio: AutorizacionLaboratorio): Boolean;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://arsse' +
    'nasa.tools.web.org/RemoverProcedimientoIn', RequestNamespace='http://ar' +
    'ssenasa.tools.web.org/', ResponseNamespace='http://arssenasa.tools.web.' +
    'org/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function RemoverProcedimientoIn(TOKEN: string; index: Integer; var AutLaboratorio: AutorizacionLaboratorio): Boolean;
    /// <remarks/>
    function BeginRemoverProcedimientoIn(TOKEN: string; index: Integer; AutLaboratorio: AutorizacionLaboratorio; 
      callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndRemoverProcedimientoIn(asyncResult: System.IAsyncResult; out AutLaboratorio: AutorizacionLaboratorio): Boolean;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://arsse' +
    'nasa.tools.web.org/AceptaAuth', RequestNamespace='http://arssenasa.tool' +
    's.web.org/', ResponseNamespace='http://arssenasa.tools.web.org/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function AceptaAuth(TOKEN: string; DatosAutorizacion: AutorizacionLaboratorio): AutorizacionLaboratorio;
    /// <remarks/>
    function BeginAceptaAuth(TOKEN: string; DatosAutorizacion: AutorizacionLaboratorio; 
      callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndAceptaAuth(asyncResult: System.IAsyncResult): AutorizacionLaboratorio;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://arsse' +
    'nasa.tools.web.org/AnularAuth', RequestNamespace='http://arssenasa.tool' +
    's.web.org/', ResponseNamespace='http://arssenasa.tools.web.org/', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function AnularAuth(TOKEN: string; NOTA: string; NAP: string): AutorizacionLaboratorio;
    /// <remarks/>
    function BeginAnularAuth(TOKEN: string; NOTA: string; NAP: string; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndAnularAuth(asyncResult: System.IAsyncResult): AutorizacionLaboratorio;
  end;
  
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://arssenasa.too' +
  'ls.web.org/')]
  Afiliados = class
    /// <remarks/>
  public
    NSS: string;
    /// <remarks/>
    CDG: Integer;
    /// <remarks/>
    CEDULA: string;
    /// <remarks/>
    PSS: Integer;
    /// <remarks/>
    Nombre: string;
    /// <remarks/>
    Regimen: string;
    /// <remarks/>
    RegimenDesc: string;
    /// <remarks/>
    Estatus: string;
    /// <remarks/>
    EstatusDesc: string;
    /// <remarks/>
    CodMsg: Integer;
    /// <remarks/>
    CodMsgDesc: string;
  end;
  
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://arssenasa.too' +
  'ls.web.org/')]
  EstatusProcedimiento = (
    /// <remarks/>
    EnCobertura, 
    /// <remarks/>
    NoCobertura, 
    /// <remarks/>
    CodigoInvalido, 
    /// <remarks/>
    ProcedimientoYaRealizado);
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://arssenasa.too' +
  'ls.web.org/')]
  Procedimiento = class
    /// <remarks/>
  public
    SIMON: string;
    /// <remarks/>
    CUBS: string;
    /// <remarks/>
    SubGrupo: string;
    /// <remarks/>
    Descripcion: string;
    /// <remarks/>
    Tarifa: System.Decimal;
    /// <remarks/>
    CoPago: System.Decimal;
    /// <remarks/>
    Estatus: EstatusProcedimiento;
    /// <remarks/>
    EstatusDescripcion: string;
  end;
  
  TArrayOfProcedimiento = array of Procedimiento;
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://arssenasa.too' +
  'ls.web.org/')]
  AutorizacionLaboratorio = class
    /// <remarks/>
  public
    NAP: string;
    /// <remarks/>
    Contrato: Integer;
    /// <remarks/>
    Regimen: Integer;
    /// <remarks/>
    PrestadorCDG: Integer;
    /// <remarks/>
    PrestadorTipo: Integer;
    /// <remarks/>
    FechaAutorizacion: System.DateTime;
    /// <remarks/>
    NSS: string;
    /// <remarks/>
    AccidenteTransito: Boolean;
    /// <remarks/>
    Diagnostico: string;
    /// <remarks/>
    MontoAutorizado: System.Decimal;
    /// <remarks/>
    ValorCopago: System.Decimal;
    /// <remarks/>
    Procedimientos: TArrayOfProcedimiento;
  end;
  
implementation

{$AUTOBOX ON}
{$HINTS OFF}
{$WARNINGS OFF}

/// <remarks/>
constructor WSAuthentication.Create;
begin
  inherited Create;
  Self.Url := 'http://arssenasa.gov.do/webservices/WSAuthLabs/WsAuthenticati' +
  'on.asmx';
end;

/// <remarks/>
function WSAuthentication.Validar(cedula: string; UsuarioID: string; password: string): string;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('Validar', TArrayOfSystem_Object.Create(cedula, UsuarioID, 
          password));
  Result := (string(results[0]));
end;

/// <remarks/>
function WSAuthentication.BeginValidar(cedula: string; UsuarioID: string; password: string; 
  callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('Validar', TArrayOfSystem_Object.Create(cedula, 
          UsuarioID, password), callback, asyncState);
end;

/// <remarks/>
function WSAuthentication.EndValidar(asyncResult: System.IAsyncResult): string;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (string(results[0]));
end;

/// <remarks/>
function WSAuthentication.ConsultarAfiliado(TOKEN: string; TipoID: Integer; ID: string): Afiliados;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('ConsultarAfiliado', TArrayOfSystem_Object.Create(TOKEN, 
          TipoID, ID));
  Result := (Afiliados(results[0]));
end;

/// <remarks/>
function WSAuthentication.BeginConsultarAfiliado(TOKEN: string; TipoID: Integer; 
  ID: string; callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('ConsultarAfiliado', TArrayOfSystem_Object.Create(TOKEN, 
          TipoID, ID), callback, asyncState);
end;

/// <remarks/>
function WSAuthentication.EndConsultarAfiliado(asyncResult: System.IAsyncResult): Afiliados;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Afiliados(results[0]));
end;

/// <remarks/>
function WSAuthentication.Generar(TOKEN: string; DatosAutorizacion: AutorizacionLaboratorio): AutorizacionLaboratorio;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('Generar', TArrayOfSystem_Object.Create(TOKEN, DatosAutorizacion));
  Result := (AutorizacionLaboratorio(results[0]));
end;

/// <remarks/>
function WSAuthentication.BeginGenerar(TOKEN: string; DatosAutorizacion: AutorizacionLaboratorio; 
  callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('Generar', TArrayOfSystem_Object.Create(TOKEN, DatosAutorizacion), 
      callback, asyncState);
end;

/// <remarks/>
function WSAuthentication.EndGenerar(asyncResult: System.IAsyncResult): AutorizacionLaboratorio;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (AutorizacionLaboratorio(results[0]));
end;

/// <remarks/>
function WSAuthentication.AgrearProcedimiento(TOKEN: string; oProcedimiento: Procedimiento; 
  var AutLaboratorio: AutorizacionLaboratorio): Boolean;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('AgrearProcedimiento', TArrayOfSystem_Object.Create(TOKEN, 
          oProcedimiento, AutLaboratorio));
  AutLaboratorio := (AutorizacionLaboratorio(results[1]));
  Result := (Boolean(results[0]));
end;

/// <remarks/>
function WSAuthentication.BeginAgrearProcedimiento(TOKEN: string; oProcedimiento: Procedimiento; 
  AutLaboratorio: AutorizacionLaboratorio; callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('AgrearProcedimiento', TArrayOfSystem_Object.Create(TOKEN, 
          oProcedimiento, AutLaboratorio), callback, asyncState);
end;

/// <remarks/>
function WSAuthentication.EndAgrearProcedimiento(asyncResult: System.IAsyncResult; 
  out AutLaboratorio: AutorizacionLaboratorio): Boolean;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  AutLaboratorio := (AutorizacionLaboratorio(results[1]));
  Result := (Boolean(results[0]));
end;

/// <remarks/>
function WSAuthentication.RemoverProcedimiento(TOKEN: string; oProcedimiento: Procedimiento; 
  var AutLaboratorio: AutorizacionLaboratorio): Boolean;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('RemoverProcedimiento', TArrayOfSystem_Object.Create(TOKEN, 
          oProcedimiento, AutLaboratorio));
  AutLaboratorio := (AutorizacionLaboratorio(results[1]));
  Result := (Boolean(results[0]));
end;

/// <remarks/>
function WSAuthentication.BeginRemoverProcedimiento(TOKEN: string; oProcedimiento: Procedimiento; 
  AutLaboratorio: AutorizacionLaboratorio; callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('RemoverProcedimiento', TArrayOfSystem_Object.Create(TOKEN, 
          oProcedimiento, AutLaboratorio), callback, asyncState);
end;

/// <remarks/>
function WSAuthentication.EndRemoverProcedimiento(asyncResult: System.IAsyncResult; 
  out AutLaboratorio: AutorizacionLaboratorio): Boolean;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  AutLaboratorio := (AutorizacionLaboratorio(results[1]));
  Result := (Boolean(results[0]));
end;

/// <remarks/>
function WSAuthentication.RemoverProcedimientoIn(TOKEN: string; index: Integer; 
  var AutLaboratorio: AutorizacionLaboratorio): Boolean;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('RemoverProcedimientoIn', TArrayOfSystem_Object.Create(TOKEN, 
          index, AutLaboratorio));
  AutLaboratorio := (AutorizacionLaboratorio(results[1]));
  Result := (Boolean(results[0]));
end;

/// <remarks/>
function WSAuthentication.BeginRemoverProcedimientoIn(TOKEN: string; index: Integer; 
  AutLaboratorio: AutorizacionLaboratorio; callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('RemoverProcedimientoIn', TArrayOfSystem_Object.Create(TOKEN, 
          index, AutLaboratorio), callback, asyncState);
end;

/// <remarks/>
function WSAuthentication.EndRemoverProcedimientoIn(asyncResult: System.IAsyncResult; 
  out AutLaboratorio: AutorizacionLaboratorio): Boolean;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  AutLaboratorio := (AutorizacionLaboratorio(results[1]));
  Result := (Boolean(results[0]));
end;

/// <remarks/>
function WSAuthentication.AceptaAuth(TOKEN: string; DatosAutorizacion: AutorizacionLaboratorio): AutorizacionLaboratorio;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('AceptaAuth', TArrayOfSystem_Object.Create(TOKEN, DatosAutorizacion));
  Result := (AutorizacionLaboratorio(results[0]));
end;

/// <remarks/>
function WSAuthentication.BeginAceptaAuth(TOKEN: string; DatosAutorizacion: AutorizacionLaboratorio; 
  callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('AceptaAuth', TArrayOfSystem_Object.Create(TOKEN, 
          DatosAutorizacion), callback, asyncState);
end;

/// <remarks/>
function WSAuthentication.EndAceptaAuth(asyncResult: System.IAsyncResult): AutorizacionLaboratorio;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (AutorizacionLaboratorio(results[0]));
end;

/// <remarks/>
function WSAuthentication.AnularAuth(TOKEN: string; NOTA: string; NAP: string): AutorizacionLaboratorio;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('AnularAuth', TArrayOfSystem_Object.Create(TOKEN, NOTA, 
          NAP));
  Result := (AutorizacionLaboratorio(results[0]));
end;

/// <remarks/>
function WSAuthentication.BeginAnularAuth(TOKEN: string; NOTA: string; NAP: string; 
  callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('AnularAuth', TArrayOfSystem_Object.Create(TOKEN, 
          NOTA, NAP), callback, asyncState);
end;

/// <remarks/>
function WSAuthentication.EndAnularAuth(asyncResult: System.IAsyncResult): AutorizacionLaboratorio;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (AutorizacionLaboratorio(results[0]));
end;

end.
