unit DialogConsultaEntradasClinica;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DialogConsulta, cxGraphics, Menus, cxLookAndFeelPainters, cxStyles,
  cxCustomData, cxFilter, cxData, cxDataStorage, cxEdit, DB, cxDBData,
  cxGridCustomTableView, cxGridTableView, cxGridDBTableView, ADODB,
  dxLayoutControl, cxGridLevel, cxClasses, cxControls, cxGridCustomView, cxGrid,
  StdCtrls, cxButtons, cxTextEdit, cxContainer, cxMaskEdit, cxDropDownEdit,
  DialogCobro, cxintl, cxCheckBox;

type
  TfrmDialogConsultaEntradasClinica = class(TfrmDialogConsulta)
    dbDatosTotalPagado: TcxGridDBColumn;
    dbDatosTotalPendiente: TcxGridDBColumn;
    dbDatosEntradaID: TcxGridDBColumn;
    dbDatosFecha: TcxGridDBColumn;
    dbDatosPacienteID: TcxGridDBColumn;
    dbDatosNeto: TcxGridDBColumn;
    dbDatosNombrePaciente: TcxGridDBColumn;
    dbDatosClienteNombre: TcxGridDBColumn;
    dbDatosRECORDCLINICA: TcxGridDBColumn;
    dbDatosNUMEROHABITACION: TcxGridDBColumn;
    dbDatosFECHAENTRADA: TcxGridDBColumn;
    dbDatosEstatus: TcxGridDBColumn;
    procedure cgDatosExit(Sender: TObject);
    procedure cgDatosEnter(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure FormShow(Sender: TObject);
    procedure edbuscarPropertiesChange(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure BuscarData;
  private
    { Private declarations }
  public
    { Public declarations }
    procedure Run;
  end;

var
  frmDialogConsultaEntradasClinica: TfrmDialogConsultaEntradasClinica;
  adentrogrid : Boolean;

implementation

uses DataModule,PuntoVenta,Main;

{$R *.dfm}

procedure TfrmDialogConsultaEntradasClinica.Run;
Var
 qfind : TADOQuery;
begin
 showmodal;
 if ModalResult = mrOk then
  begin
   If (frmMain.Exis_Cli = True) then
    Begin
      frmMain.frmClinica._recorId := DM.qrEntradaClinicaRecid.Value;
      frmMain.frmClinica.check_balance := False;
      frmMain.frmClinica.BuscarDatos;
      frmMain.frmClinica.RefrescarInterface;
    end;
  end;
end;


procedure TfrmDialogConsultaEntradasClinica.BuscarData;
var
 sqlString : String;
begin
 DM.qrParametro.close;
 DM.qrParametro.open;

 sqlString := 'SELECT * FROM PTEntradaPacienteClinica WHERE RecId IS NOT NULL ';
 sqlString := sqlString + ' AND DataAreaId = ' + #39 + DM.CurEmpresa + #39;

 if edbuscar.Text <> '' then begin
   Case edbuscarpor.ItemIndex of
     0 : sqlString := sqlString + ' AND MuestraNo like '+#39+'%'+edbuscar.Text+'%'+#39;
     1 : sqlString := sqlString + ' AND EntradaID like '+#39+'%'+edbuscar.Text+'%'+#39;
     2 : sqlString := sqlString + ' AND RecordClinica like '+#39+'%'+edbuscar.Text+'%'+#39;
     3 : sqlString := sqlString + ' AND NumeroHabitacion like '+#39+'%'+edbuscar.Text+'%'+#39;
     4 : sqlString := sqlString + ' AND PacienteID like '+#39+'%'+edbuscar.Text+'%'+#39;
     5 : sqlString := sqlString + ' AND NombrePaciente like '+#39+'%'+'%'+edbuscar.Text+'%'+#39;
     6 : sqlString := sqlString + ' AND ClienteNombre like '+#39+'%'+edbuscar.Text+'%'+#39;
   end;
 end;

 DM.qrEntradaClinica.Close;
 DM.qrEntradaClinica.SQL.Text := sqlString + ' ORDER BY Fecha DESC, SucursalId DESC, EntradaID DESC, MuestraNo Desc ';
 DM.qrEntradaClinica.Open;
end;


procedure TfrmDialogConsultaEntradasClinica.cgDatosEnter(Sender: TObject);
begin
  inherited;
  adentrogrid := true;
end;


procedure TfrmDialogConsultaEntradasClinica.cgDatosExit(Sender: TObject);
begin
  inherited;
  adentrogrid := false;
end;


procedure TfrmDialogConsultaEntradasClinica.edbuscarPropertiesChange(Sender: TObject);
begin
  inherited;
  BuscarData;
end;


procedure TfrmDialogConsultaEntradasClinica.FormCreate(Sender: TObject);
var
 sqlString : String;
begin
  inherited;
  edbuscarpor.ItemIndex := 4;
end;


procedure TfrmDialogConsultaEntradasClinica.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  inherited;
  if (key = Vk_Down) and (not AdentroGrid) then
     PostMessage(Handle, Wm_NextDlgCtl, 0, 0);
  if (key = 13) and (not AdentroGrid) then
     PostMessage(Handle, Wm_NextDlgCtl, 0, 0);
  if (key = 13) and (AdentroGrid) then
  begin
   Close;
   ModalResult := mrOk;
  end;
  if (key = Vk_Up) and (not AdentroGrid) then
     PostMessage(Handle, Wm_NextDlgCtl, 1, 0);
  if (key = 27) then
  begin
   Close;
  end;
end;


procedure TfrmDialogConsultaEntradasClinica.FormShow(Sender: TObject);
begin
  inherited;
  edbuscar.SetFocus;
end;


end.
