// ************************************************************************ //
// The types declared in this file were generated from data read from the
// WSDL File described below:
// WSDL     : http://localhost/Wspalic/WebService1.asmx?WSDL
// Encoding : utf-8
// Version  : 1.0
// (28/06/2013 05:20:13 p.m. - 1.33.2.5)
// ************************************************************************ //

unit WebServicePalic;

interface

uses InvokeRegistry, SOAPHTTPClient, Types, XSBuiltIns;

type

  // ************************************************************************ //
  // The following types, referred to in the WSDL document are not being represented
  // in this file. They are either aliases[@] of other types represented or were referred
  // to but never[!] declared in the document. The types from the latter category
  // typically map to predefined/known XML or Borland types; however, they could also 
  // indicate incorrect WSDL documents that failed to declare or import a schema type.
  // ************************************************************************ //
  // !:string          - "http://www.w3.org/2001/XMLSchema"

  fValidaPasswordResult = class;                { "http://tempuri.org/" }
  fValidaAfiliadoResult = class;                { "http://tempuri.org/" }
  fValidadiagnosticoResult = class;             { "http://tempuri.org/" }
  fConsulta_coberturaResult = class;            { "http://tempuri.org/" }
  fProcesa_reclamacionResult = class;           { "http://tempuri.org/" }
  fcancela_reclamacionResult = class;           { "http://tempuri.org/" }



  // ************************************************************************ //
  // Namespace : http://tempuri.org/
  // ************************************************************************ //
  fValidaPasswordResult = class(TRemotable)
  private
    Fschema: WideString;
  published
    property schema: WideString read Fschema write Fschema;
  end;



  // ************************************************************************ //
  // Namespace : http://tempuri.org/
  // ************************************************************************ //
  fValidaAfiliadoResult = class(TRemotable)
  private
    Fschema: WideString;
  published
    property schema: WideString read Fschema write Fschema;
  end;



  // ************************************************************************ //
  // Namespace : http://tempuri.org/
  // ************************************************************************ //
  fValidadiagnosticoResult = class(TRemotable)
  private
    Fschema: WideString;
  published
    property schema: WideString read Fschema write Fschema;
  end;



  // ************************************************************************ //
  // Namespace : http://tempuri.org/
  // ************************************************************************ //
  fConsulta_coberturaResult = class(TRemotable)
  private
    Fschema: WideString;
  published
    property schema: WideString read Fschema write Fschema;
  end;



  // ************************************************************************ //
  // Namespace : http://tempuri.org/
  // ************************************************************************ //
  fProcesa_reclamacionResult = class(TRemotable)
  private
    Fschema: WideString;
  published
    property schema: WideString read Fschema write Fschema;
  end;



  // ************************************************************************ //
  // Namespace : http://tempuri.org/
  // ************************************************************************ //
  fcancela_reclamacionResult = class(TRemotable)
  private
    Fschema: WideString;
  published
    property schema: WideString read Fschema write Fschema;
  end;


  // ************************************************************************ //
  // Namespace : http://tempuri.org/
  // soapAction: http://tempuri.org/%operationName%
  // transport : http://schemas.xmlsoap.org/soap/http
  // binding   : TWebService1Soap
  // service   : TWebService1
  // port      : TWebService1Soap
  // URL       : http://localhost/Wspalic/WebService1.asmx
  // ************************************************************************ //
  TWebServicePalicSoap = interface(IInvokable)
  ['{BF303294-87C1-2F3F-20B1-122C27CAE0EA}']
    function  fValidaPassword(const User: WideString; const pwd: WideString): fValidaPasswordResult; stdcall;
    function  fValidaAfiliado(const afiliado: WideString; const codprod: WideString; const tipo: WideString; const usuario: WideString; const detalle: WideString): fValidaAfiliadoResult; stdcall;
    function  fValidadiagnostico(const numsession: WideString; const diagnostico: WideString): fValidadiagnosticoResult; stdcall;
    function  fConsulta_cobertura(const numsession: WideString; const tip_pla_afi: WideString; const Cobertura: WideString; const Tipo_Cobertura: WideString): fConsulta_coberturaResult; stdcall;
    function  fProcesa_reclamacion(const numsession: WideString; const tip_pla_afi: WideString; const Cobertura: WideString; const P_Frecuencia: WideString; const TipoRemitente: WideString; const PCod_Remitente: WideString; const Desc_Remitente: WideString; const p_Origen: WideString; const Tipo_Cobertura: WideString): fProcesa_reclamacionResult; stdcall;
    function  fcancela_reclamacion(const codprod: WideString; const afiliado: WideString; const Reclamacion: WideString; const numsession: WideString; const comentario: WideString): fcancela_reclamacionResult; stdcall;
  end;

function GetTWebService1Soap(UseWSDL: Boolean=System.False; Addr: string=''; HTTPRIO: THTTPRIO = nil): TWebService1Soap;


implementation

function GetTWebServicePalicSoap(UseWSDL: Boolean; Addr: string; HTTPRIO: THTTPRIO): TWebServicePalicSoap;
const
  defWSDL = 'http://localhost/Wspalic/WebService1.asmx?WSDL';
  defURL  = 'http://localhost/Wspalic/WebService1.asmx';
  defSvc  = 'TWebService1';
  defPrt  = 'TWebService1Soap';
var
  RIO: THTTPRIO;
begin
  Result := nil;
  if (Addr = '') then
  begin
    if UseWSDL then
      Addr := defWSDL
    else
      Addr := defURL;
  end;
  if HTTPRIO = nil then
    RIO := THTTPRIO.Create(nil)
  else
    RIO := HTTPRIO;
  try
    Result := (RIO as TWebServicePalicSoap);
    if UseWSDL then
    begin
      RIO.WSDLLocation := Addr;
      RIO.Service := defSvc;
      RIO.Port := defPrt;
    end else
      RIO.URL := Addr;
  finally
    if (Result = nil) and (HTTPRIO = nil) then
      RIO.Free;
  end;
end;


initialization
  InvRegistry.RegisterInterface(TypeInfo(TWebServicePalicSoap), 'http://tempuri.org/', 'utf-8');
  InvRegistry.RegisterDefaultSOAPAction(TypeInfo(TWebServicePalicSoap), 'http://tempuri.org/%operationName%');
  InvRegistry.RegisterInvokeOptions(TypeInfo(TWebServicePalicSoap), ioDocument);
  RemClassRegistry.RegisterXSClass(fValidaPasswordResult, 'http://tempuri.org/', 'fValidaPasswordResult');
  RemClassRegistry.RegisterXSClass(fValidaAfiliadoResult, 'http://tempuri.org/', 'fValidaAfiliadoResult');
  RemClassRegistry.RegisterXSClass(fValidadiagnosticoResult, 'http://tempuri.org/', 'fValidadiagnosticoResult');
  RemClassRegistry.RegisterXSClass(fConsulta_coberturaResult, 'http://tempuri.org/', 'fConsulta_coberturaResult');
  RemClassRegistry.RegisterXSClass(fProcesa_reclamacionResult, 'http://tempuri.org/', 'fProcesa_reclamacionResult');
  RemClassRegistry.RegisterXSClass(fcancela_reclamacionResult, 'http://tempuri.org/', 'fcancela_reclamacionResult');

end.