unit DialogConsultaPerfilGenetico;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DialogConsulta, cxGraphics, Menus, cxLookAndFeelPainters, cxStyles,
  cxCustomData, cxFilter, cxData, cxDataStorage, cxEdit, DB, cxDBData,
  cxGridCustomTableView, cxGridTableView, cxGridDBTableView, ADODB,
  dxLayoutControl, cxGridLevel, cxClasses, cxControls, cxGridCustomView, cxGrid,
  StdCtrls, cxButtons, cxTextEdit, cxContainer, cxMaskEdit, cxDropDownEdit,
  DialogCobro, cxintl, cxLabel,dlgmensajes, cxLookupEdit, cxDBLookupEdit,
  cxDBExtLookupComboBox, LMDCustomButton, LMDButton, LMDControl, LMDBaseControl,
  LMDBaseGraphicControl, LMDBaseLabel, LMDCustomLabel, LMDLabel,
  LMDCustomControl, LMDCustomPanel, LMDCustomBevelPanel, LMDSimplePanel,
  cxDBLookupComboBox, cxDBEdit, cxCalendar, cxImageComboBox;

type
  TfrmDialogConsultaPerfilGenetico = class(TfrmDialogConsulta)
    dbDatosRecID: TcxGridDBColumn;
    dbDatosIdentificacion: TcxGridDBColumn;
    dbDatosNombre: TcxGridDBColumn;
    dbDatosTelefono: TcxGridDBColumn;
    qrPacientes: TADOQuery;
    cxLabel1: TcxLabel;
    dxLayoutControl1Item3: TdxLayoutItem;
    BtNuevo: TcxButton;
    dbDatosTipo: TcxGridDBColumn;
    spPerfilGenetico: TLMDSimplePanel;
    LMDLabel2: TLMDLabel;
    btCancelarNCF: TLMDButton;
    btAceptaPG: TLMDButton;
    mskDocumento: TcxMaskEdit;
    txtNombre: TcxTextEdit;
    cxLabel4: TcxLabel;
    cxLabel5: TcxLabel;
    cxLabel2: TcxLabel;
    cbExtDocumento: TcxExtLookupComboBox;
    QrParentesco: TADOQuery;
    DsParentesco: TDataSource;
    QrParentescoId: TIntegerField;
    QrParentescoNombre: TStringField;
    QrParentescoClave: TStringField;
    QrParentescoEstatus: TStringField;
    qrPacientesRecID: TIntegerField;
    qrPacientesIdentificacion: TStringField;
    qrPacientesNombre: TStringField;
    qrPacientesParentesco: TIntegerField;
    qrPacientesFecha_Nac: TDateTimeField;
    qrPacientesTelefono: TStringField;
    qrPacientesNum_Caso: TStringField;
    qrPacientesFecha_Rec: TDateTimeField;
    qrPacientesTipo: TStringField;
    qrPacientesClienteid: TStringField;
    qrPacientesTelefono2: TStringField;
    qrPacientesFax: TStringField;
    qrPacientesEmail: TStringField;
    qrPacientesCiudadID: TStringField;
    qrPacientesEnvioResultado: TIntegerField;
    qrPacientesCobrarDiferencia: TIntegerField;
    qrPacientesPublicarInternet: TIntegerField;
    qrPacientesSexo: TWordField;
    qrPacientesFechaNacimiento: TDateTimeField;
    btnAdd: TcxButton;
    dxLayoutControl1Item8: TdxLayoutItem;
    dxLayoutControl1Item7: TdxLayoutItem;
    qrPacientesDireccion: TStringField;
    cxLabel9: TcxLabel;
    CbSexo: TcxDBImageComboBox;
    cxLabel10: TcxLabel;
    EdFechaBorn: TcxDBDateEdit;
    cxLabel11: TcxLabel;
    mskTelResidencia: TcxDBMaskEdit;
    dxLayoutControl1Group3: TdxLayoutGroup;
    dxLayoutControl1Item9: TdxLayoutItem;
    dxLayoutControl1Group5: TdxLayoutGroup;
    dxLayoutControl1Item10: TdxLayoutItem;
    cgSeleccion: TcxGrid;
    dbSeleccion: TcxGridDBTableView;
    dbSeleccionSeleccion: TcxGridDBColumn;
    dbSeleccionPruebaID: TcxGridDBColumn;
    dbSeleccionDescripcion: TcxGridDBColumn;
    dbSeleccionPrecio: TcxGridDBColumn;
    dbSeleccionPrecioDolares: TcxGridDBColumn;
    lvSeleccion: TcxGridLevel;
    dxLayoutControl1Item14: TdxLayoutItem;
    procedure btnAddClick(Sender: TObject);
    procedure btCancelarNCFClick(Sender: TObject);
    procedure btAceptaPGClick(Sender: TObject);
    procedure BtNuevoClick(Sender: TObject);
    procedure edbuscarExit(Sender: TObject);
    procedure cgDatosExit(Sender: TObject);
    procedure cgDatosEnter(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure FormShow(Sender: TObject);
    procedure edbuscarPropertiesChange(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure BuscarData;
  private
    { Private declarations }
  public
    { Public declarations }
    procedure Run;
  end;

var
  frmDialogConsultaPerfilGenetico: TfrmDialogConsultaPerfilGenetico;
  adentrogrid, _buscar : Boolean;

implementation

uses DataModule, PuntoVenta, Main;

{$R *.dfm}


procedure TfrmDialogConsultaPerfilGenetico.btAceptaPGClick(Sender: TObject);
Var qfind : TADOQuery;
begin
  inherited;
  If (Length(trim(mskDocumento.Text))=13) and (Not Dm.GetDigitoVerificador(copy(DM.Cortar_Char('-', mskDocumento.Text),1,11))) Then
  Begin
       EtMensajeDlg('Favor digitar Número de Cédula Válido.', etError, [etOk],0, dm.Imagenes.Items[4].Bitmap,true);
       mskDocumento.Text := EmptyStr;
       mskDocumento.Setfocus;
       Exit;
  end
  else
  Begin
        qfind := DM.NewQuery;
        qfind.Close;
        qfind.SQL.Text := ' Select Top 1 * from ptcliente c (nolock) '+
                           ' Where identificacion='+#39+mskDocumento.Text+'0'+#39;
        qfind.Open;
        If (qfind.RecordCount = 0) Then
        begin
{          If Not DM.ActPerfil(mskDocumento.Text,
                              txtNombre.Text,
                              cbSexo.EditValue,
                              edFechaBorn.EditingValue,
                              mskTelResidencia.EditText) Then
          begin
            Raise exception.CreateFmt( ' NO Se Pudo Grabar el Perfil Genético. '+ #13 +
                                       ' Se Ha Generado Un Error en el SP. '+ #13 +
                                       ' Por Favor, Intentelo Nuevamente.!!!', []);
          end;
}
        end;
        FreeAndNil(qfind);
  End;
  mskDocumento.EditValue  :=EmptyStr;
  txtNombre.Text          :=EmptyStr;
  cbSexo.ItemIndex        := 0;
  EdFechaBorn.Text        :=EmptyStr;
  mskTelResidencia.Text   :=EmptyStr;
  spPerfilGenetico.Visible:= False;
 end;

procedure TfrmDialogConsultaPerfilGenetico.btCancelarNCFClick(Sender: TObject);
begin
  inherited;
  spPerfilGenetico.Visible := False;
end;

procedure TfrmDialogConsultaPerfilGenetico.btnAddClick(Sender: TObject);
begin
  inherited;
  spPerfilGenetico.Visible := True;
  cbExtDocumento.EditValue :='2';
end;

procedure TfrmDialogConsultaPerfilGenetico.BtNuevoClick(Sender: TObject);
begin
{
//  inherited;
//  frmMain.CustPtoVta := '';
//  frmMain.LanzaVentana(1100);
  frmMain.frmTmp.RegistrarNuevoPaciente1.Click;
}
end;

procedure TfrmDialogConsultaPerfilGenetico.BuscarData;
var
 sqlString : String;
begin
 DM.qrParametro.Close;
 DM.qrParametro.Open;
// sqlString := 'Select p.*,r.Nombre as Tipo FROM ptPerfilGenetico p Inner Join ptParentesco r On p.parentesco=r.id Where r.Estatus='+#39+'A'+#39;
 sqlString := 'Select top 1 p.*,r.Nombre as Tipo ,c.Direccion,c.Clienteid, '+
              'c.Telefono2,c.Fax,c.Email,c.CiudadID,c.EnvioResultado,c.CobrarDiferencia,c.PublicarInternet,'+
              'c.FechaNacimiento FROM ptPerfilGenetico p '+
              ' Inner Join ptParentesco  r On r.id = p.parentesco inner join ptcliente c On '+
              ' substring(c.identificacion,1,14)=p.identificacion+'+#39+'0'+#39+
              ' Where r.Estatus='+#39+'A'+#39;

 if edbuscar.Text <> '' then begin
   case edbuscarpor.ItemIndex of
     1 : sqlString := sqlString + ' AND p.Nombre like '+#39+'%'+edbuscar.Text+'%'+#39;
     2 : sqlString := sqlString + ' AND p.Identificacion like '+#39+'%'+edbuscar.Text+'%'+#39;
     0 : sqlString := sqlString + ' AND p.Telefono like '+#39+'%'+edbuscar.Text+'%'+#39;
   end;
 end;

 If (Trim(edbuscar.Text) = EmptyStr) or (Length(Trim(edbuscar.Text)) < 5) then
 begin
      EtMensajeDlg('Debe escribir criterio de búsqueda más exacto en el Texto.  Verifique.', etAviso, [etOk],0, dm.Imagenes.Items[4].Bitmap,true);
      edbuscar.SetFocus;
      Exit;
 end;
 qrPacientes.Close;
 qrPacientes.SQL.Text := sqlString;
 qrPacientes.Open;
end;

procedure TfrmDialogConsultaPerfilGenetico.cgDatosEnter(Sender: TObject);
begin
  inherited;
  adentrogrid := True;
  _buscar := False;
end;

procedure TfrmDialogConsultaPerfilGenetico.cgDatosExit(Sender: TObject);
begin
  inherited;
  adentrogrid := False;
  _buscar := True;
end;

procedure TfrmDialogConsultaPerfilGenetico.edbuscarExit(Sender: TObject);
begin
  inherited;
  _buscar := True;
  adentrogrid := False;
end;

procedure TfrmDialogConsultaPerfilGenetico.edbuscarPropertiesChange(Sender: TObject);
begin
  inherited;
  _buscar := True;
  adentrogrid := False;
//  BuscarData;
end;

procedure TfrmDialogConsultaPerfilGenetico.FormCreate(Sender: TObject);
begin
  inherited;
  qrParentesco.Close;
  qrParentesco.Open;
  dsDatos.DataSet := qrPacientes;
  edbuscarpor.ItemIndex := 0
end;

procedure TfrmDialogConsultaPerfilGenetico.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  inherited;
  if (key = Vk_Down) and (not AdentroGrid) then
     PostMessage(Handle, Wm_NextDlgCtl, 0, 0);

  if (key = 13) and (not AdentroGrid) then
     PostMessage(Handle, Wm_NextDlgCtl, 0, 0);

  if (key = Vk_Up) and (not AdentroGrid) then
     PostMessage(Handle, Wm_NextDlgCtl, 1, 0);

  if (key = 13) and (AdentroGrid) then
    begin
      Close;
      ModalResult := mrOk;
    end;

  if (key = 13) and (_buscar) then
    begin
      If (AdentroGrid) then
        Begin
          Close;
          ModalResult := mrOk;
        end
      Else
        BuscarData;
    end;

  if (key = 27) then
    begin
      Close;
    end;

  if (key = vk_f1) then
    begin
      BtNuevo.Click;
    end;

  if (key = vk_f9) then
    begin
      Close;

      if (qrPacientes.RecordCount >0) then
        ModalResult := mrOk;
    end;
end;

procedure TfrmDialogConsultaPerfilGenetico.FormShow(Sender: TObject);
begin
  inherited;
  _buscar := True;
  adentrogrid := False;
  edbuscar.SetFocus;
end;


procedure TfrmDialogConsultaPerfilGenetico.Run;
Var
 qfind : TADOQuery;
 qfindciudad : TADOquery;
 ClienteFactura : string;
begin
  _buscar := True;
 AdentroGrid := false;
 showmodal;

 if ModalResult = mrOk then
  begin
   If (frmMain.Exis_Vta = True) then
   Begin
          qfindciudad := DM.Find_Ldr('Select * from PTCIUDAD Where CiudadID = :ciu', qrPacientesCiudadID.AsString);
          If Factura_St = 'I' Then
          begin
            frmMain.frmTmp.qrEntradaPaciente.Edit;
            frmMain.frmTmp.qrEntradaPacientePacienteID.Value := qrPacientesClienteID.Value;
            if DM.Empleado_Existe(frmMain.frmTmp.qrEntradaPacientePacienteID.Value) then
            begin
               frmMain.frmTmp.cxDbPaciente.Properties.ReadOnly := True;
               frmMain.frmTmp.cxDbPaciente.Style.Color := ClAqua;
            end
            else
            begin
               frmMain.frmTmp.cxDbPaciente.Properties.ReadOnly := False;
               frmMain.frmTmp.cxDbPaciente.Style.Color := ClWindow;
            end;
            frmMain.frmTmp.qrEntradaPacienteNombrePaciente.Value := qrPacientesNombre.Value;
            if copy(qrPacientesNombre.Value,1,8)<> 'PACIENTE' then
            begin
              If (qfindciudad.RecordCount > 0) then
              begin
                frmMain.frmTmp.qrEntradaPacienteDireccion.Value := qrPacientesDireccion.Value + #13 +
                                                                  qfindciudad.FieldByName('Descripcion').AsString;
              end
              else
              frmMain.frmTmp.qrEntradaPacienteDireccion.Value := qrPacientesDireccion.Value;
            end
            else
            frmMain.frmTmp.qrEntradaPacienteDireccion.Value := EmptyStr;
            frmMain.frmTmp.qrEntradaPacienteTelefonos.Value := qrPacientesTelefono.Value;
            frmMain.frmTmp.qrEntradaPacienteTelefono2.Value := qrPacientesTelefono2.Value;
            frmMain.frmTmp.qrEntradaPacienteFax.Value := qrPacientesFax.Value;
            frmMain.frmTmp.qrEntradaPacienteEmail.Value := qrPacientesEMail.Value;
            frmMain.frmTmp.qrEntradaPacienteSexo.Value := qrPacientesSexo.Value;
            frmMain.frmTmp.qrEntradaPacienteFECHANACIMIENTO.Value := qrPacientesFECHA_NAC.Value;
            frmMain.frmTmp.qrEntradaPacienteEdadPaciente.Value := Trunc((StrtoInt(FormatDateTime('yyyymmdd', DM.SystemDate))-StrtoInt(FormatDateTime('yyyymmdd', qrPacientesFecha_Nac.Value)))/10000);
            frmMain.frmTmp.qrEntradaPacientePUBLICARINTERNET.Value := 0;

        end
        else
        if Factura_St = 'M' Then
        begin
           frmMain.frmTmpMod.qrEntradaPaciente.Edit;
           frmMain.frmTmpMod.qrEntradaPacientePacienteID.Value := qrPacientesClienteID.Value;
           if DM.Empleado_Existe(frmMain.frmTmpMod.qrEntradaPacientePacienteID.Value) then
           begin
               frmMain.frmTmpMod.cxDbPaciente.Properties.ReadOnly := True;
               frmMain.frmTmpMod.cxDbPaciente.Style.Color := ClAqua;
           end
           else
           begin
               frmMain.frmTmpMod.cxDbPaciente.Properties.ReadOnly := False;
               frmMain.frmTmpMod.cxDbPaciente.Style.Color := ClWindow;
           end;
           frmMain.frmTmpMod.qrEntradaPacienteNombrePaciente.Value := qrPacientesNombre.Value;
           if copy(qrPacientesNombre.Value,1,8)<> 'PACIENTE' then
           begin
             If (qfindciudad.RecordCount > 0) then
             begin
               frmMain.frmTmpMod.qrEntradaPacienteDireccion.Value := qrPacientesDireccion.Value + #13 +
                                                                  qfindciudad.FieldByName('Descripcion').AsString;
             end
             else
                frmMain.frmTmpMod.qrEntradaPacienteDireccion.Value := qrPacientesDireccion.Value;
           end
           else
               frmMain.frmTmpMod.qrEntradaPacienteDireccion.Value := EmptyStr;
           frmMain.frmTmpMod.qrEntradaPacienteTelefonos.Value := qrPacientesTelefono.Value;
           frmMain.frmTmpMod.qrEntradaPacienteTelefono2.Value := qrPacientesTelefono2.Value;
           frmMain.frmTmpMod.qrEntradaPacienteFax.Value := qrPacientesFax.Value;
           frmMain.frmTmpMod.qrEntradaPacienteEmail.Value := qrPacientesEMail.Value;
           frmMain.frmTmpMod.qrEntradaPacienteSexo.Value := qrPacientesSexo.Value;
           frmMain.frmTmpMod.qrEntradaPacienteFECHANACIMIENTO.Value := qrPacientesFECHA_NAC.Value;
           frmMain.frmTmpMod.qrEntradaPacienteEdadPaciente.Value := Trunc((StrtoInt(FormatDateTime('yyyymmdd', DM.SystemDate))-StrtoInt(FormatDateTime('yyyymmdd', qrPacientesFecha_Nac.Value)))/10000);
           frmMain.frmTmpMod.qrEntradaPacientePUBLICARINTERNET.Value := 0;
        end
        else
        if Factura_St = 'L' Then
        begin
           frmMain.frmTmpLab.qrEntradaPaciente.Edit;
           frmMain.frmTmpLab.qrEntradaPacientePacienteID.Value := qrPacientesClienteID.Value;
           frmMain.frmTmpLab.qrEntradaPacienteNombrePaciente.Value := qrPacientesNombre.Value;
           if copy(qrPacientesNombre.Value,1,8)<> 'PACIENTE' then
           begin
             If (qfindciudad.RecordCount > 0) then
             begin
               frmMain.frmTmpLab.qrEntradaPacienteDireccion.Value := qrPacientesDireccion.Value + #13 +
                                                                  qfindciudad.FieldByName('Descripcion').AsString;
             end
             else
             frmMain.frmTmpLab.qrEntradaPacienteDireccion.Value := qrPacientesDireccion.Value;
           end
           else
               frmMain.frmTmpLab.qrEntradaPacienteDireccion.Value := EmptyStr;
           frmMain.frmTmpLab.qrEntradaPacienteTelefonos.Value := qrPacientesTelefono.Value;
           frmMain.frmTmpLab.qrEntradaPacienteTelefono2.Value := qrPacientesTelefono2.Value;
           frmMain.frmTmpLab.qrEntradaPacienteFax.Value := qrPacientesFax.Value;
           frmMain.frmTmpLab.qrEntradaPacienteEmail.Value := qrPacientesEMail.Value;
           frmMain.frmTmpLab.qrEntradaPacienteSexo.Value := qrPacientesSexo.Value;
           frmMain.frmTmpLab.qrEntradaPacienteFECHANACIMIENTO.Value := qrPacientesFECHA_NAC.Value;
           frmMain.frmTmpLab.qrEntradaPacienteEdadPaciente.Value := Trunc((StrtoInt(FormatDateTime('yyyymmdd', DM.SystemDate))-StrtoInt(FormatDateTime('yyyymmdd', qrPacientesFecha_Nac.Value)))/10000);
           frmMain.frmTmpLab.qrEntradaPacientePUBLICARINTERNET.Value := 0;
        end
        else
        If Factura_St = 'C' Then
        begin
           frmMain.frmClinica.qrEntradaPaciente.Edit;
           frmMain.frmClinica.qrEntradaPacientePacienteID.Value := qrPacientesClienteID.Value;
           frmMain.frmClinica.qrEntradaPacienteNombrePaciente.Value := qrPacientesNombre.Value;
           if copy(qrPacientesNombre.Value,1,8)<> 'PACIENTE' then
           begin
             If (qfindciudad.RecordCount > 0) then
             begin
               frmMain.frmClinica.qrEntradaPacienteDireccion.Value    := qrPacientesDireccion.Value + #13 +
                                                                         qfindciudad.FieldByName('Descripcion').AsString;
             end
             else
             frmMain.frmClinica.qrEntradaPacienteDireccion.Value      := qrPacientesDireccion.Value;
           end
           else
               frmMain.frmClinica.qrEntradaPacienteDireccion.Value    := EmptyStr;
           frmMain.frmClinica.qrEntradaPacienteTelefonos.Value        := qrPacientesTelefono.Value;
           frmMain.frmClinica.qrEntradaPacienteTelefono2.Value        := qrPacientesTelefono2.Value;
           frmMain.frmClinica.qrEntradaPacienteFax.Value              := qrPacientesFax.Value;
           frmMain.frmClinica.qrEntradaPacienteEmail.Value            := qrPacientesEMail.Value;
           frmMain.frmClinica.qrEntradaPacienteSexo.Value             := qrPacientesSexo.Value;
           frmMain.frmClinica.qrEntradaPacienteFECHANACIMIENTO.Value  := qrPacientesFECHA_NAC.Value;
           frmMain.frmClinica.qrEntradaPacienteEdadPaciente.Value     := Trunc((StrtoInt(FormatDateTime('yyyymmdd', DM.SystemDate))-StrtoInt(FormatDateTime('yyyymmdd', qrPacientesFecha_Nac.Value)))/10000);
           frmMain.frmClinica.qrEntradaPacientePUBLICARINTERNET.Value := 0;
        end
        else
        If Factura_St = 'N' Then
        begin
           frmMain.frmTmpNCR.qrEntradaPaciente.Edit;
           frmMain.frmTmpNCR.qrEntradaPacientePacienteID.Value := qrPacientesClienteID.Value;
           if DM.Empleado_Existe(frmMain.frmTmpNCR.qrEntradaPacientePacienteID.Value) then
           begin
               frmMain.frmTmpNCR.cxDbPaciente.Properties.ReadOnly := True;
               frmMain.frmTmpNCR.cxDbPaciente.Style.Color := ClAqua;
           end
           else
           begin
               frmMain.frmTmpNCR.cxDbPaciente.Properties.ReadOnly := False;
               frmMain.frmTmpNCR.cxDbPaciente.Style.Color := ClWindow;
           end;
           frmMain.frmTmpNCR.qrEntradaPacienteNombrePaciente.Value := qrPacientesNombre.Value;
           if copy(qrPacientesNombre.Value,1,8)<> 'PACIENTE' then
           begin
             If (qfindciudad.RecordCount > 0) then
             begin
               frmMain.frmTmpNCR.qrEntradaPacienteDireccion.Value :=  qrPacientesDireccion.Value + #13 +
                                                                      qfindciudad.FieldByName('Descripcion').AsString;
             end
             else
             frmMain.frmTmpNCR.qrEntradaPacienteDireccion.Value := qrPacientesDireccion.Value;
           end
           else
               frmMain.frmTmpNCR.qrEntradaPacienteDireccion.Value     := EmptyStr;
           frmMain.frmTmpNCR.qrEntradaPacienteTelefonos.Value         := qrPacientesTelefono.Value;
           frmMain.frmTmpNCR.qrEntradaPacienteTelefono2.Value         := qrPacientesTelefono2.Value;
           frmMain.frmTmpNCR.qrEntradaPacienteFax.Value               := qrPacientesFax.Value;
           frmMain.frmTmpNCR.qrEntradaPacienteEmail.Value             := qrPacientesEMail.Value;
           frmMain.frmTmpNCR.qrEntradaPacienteSexo.Value              := qrPacientesSexo.Value;
           frmMain.frmTmpNCR.qrEntradaPacienteFECHANACIMIENTO.Value   := qrPacientesFECHA_NAC.Value;
           frmMain.frmTmpNCR.qrEntradaPacienteEdadPaciente.Value      := Trunc((StrtoInt(FormatDateTime('yyyymmdd', DM.SystemDate))-StrtoInt(FormatDateTime('yyyymmdd', qrPacientesFecha_Nac.Value)))/10000);
           frmMain.frmTmpNCR.qrEntradaPacientePUBLICARINTERNET.Value  := 0;
        end
        else
        if Factura_St = 'F' Then
        begin
           frmMain.frmTmpND.qrEntradaPaciente.Edit;
           frmMain.frmTmpND.qrEntradaPacientePacienteID.Value := qrPacientesClienteID.Value;
           if DM.Empleado_Existe(frmMain.frmTmpND.qrEntradaPacientePacienteID.Value) then
           begin
               frmMain.frmTmpND.cxDbPaciente.Properties.ReadOnly := True;
               frmMain.frmTmpND.cxDbPaciente.Style.Color := ClAqua;
           end
           else
           begin
               frmMain.frmTmpND.cxDbPaciente.Properties.ReadOnly := False;
               frmMain.frmTmpND.cxDbPaciente.Style.Color := ClWindow;
           end;
           frmMain.frmTmpND.qrEntradaPacienteNombrePaciente.Value := qrPacientesNombre.Value;
           if copy(qrPacientesNombre.Value,1,8)<> 'PACIENTE' then
           begin
             If (qfindciudad.RecordCount > 0) then
             begin
               frmMain.frmTmpND.qrEntradaPacienteDireccion.Value :=  qrPacientesDireccion.Value + #13 +
                                                                      qfindciudad.FieldByName('Descripcion').AsString;
             end
             else
             frmMain.frmTmpND.qrEntradaPacienteDireccion.Value := qrPacientesDireccion.Value;
           end
           else
               frmMain.frmTmpND.qrEntradaPacienteDireccion.Value     := EmptyStr;
           frmMain.frmTmpND.qrEntradaPacienteTelefonos.Value         := qrPacientesTelefono.Value;
           frmMain.frmTmpND.qrEntradaPacienteTelefono2.Value         := qrPacientesTelefono2.Value;
           frmMain.frmTmpND.qrEntradaPacienteFax.Value               := qrPacientesFax.Value;
           frmMain.frmTmpND.qrEntradaPacienteEmail.Value             := qrPacientesEMail.Value;
           frmMain.frmTmpND.qrEntradaPacienteSexo.Value              := qrPacientesSexo.Value;
           frmMain.frmTmpND.qrEntradaPacienteFECHANACIMIENTO.Value   := qrPacientesFECHA_NAC.Value;
           frmMain.frmTmpND.qrEntradaPacienteEdadPaciente.Value      := Trunc((StrtoInt(FormatDateTime('yyyymmdd', DM.SystemDate))-StrtoInt(FormatDateTime('yyyymmdd', qrPacientesFecha_Nac.Value)))/10000);
           frmMain.frmTmpND.qrEntradaPacientePUBLICARINTERNET.Value  := 0;
        end;

       {
       //OJO - GRUPO DE PRECIO Y FORMA DE PAGO.
       frmMain.frmTmp.qrEntradaPacienteGrupoDescuentoTotal.Value   := qrPacientesGrupoDescuentoTotal.Value;
       frmMain.frmTmp.qrEntradaPacienteGrupoDescuentoLinea.Value   := qrPacientesGrupoDescuentoLinea.Value;
       frmMain.frmTmp.qrEntradaPacienteGrupoPrecio.Value           := qrPacientesGrupoPrecio.Value;
       frmMain.frmTmp.qrEntradaPacienteFormadePago.Value           := qrPacientesFormaPago.Value;
       frmMain.frmTmp.Val_Forma_Pago(frmMain.frmTmp.qrEntradaPacienteFormadePago.Value);
       //OJO - GRUPO DE PRECIO Y FORMA DE PAGO.
}
{
       //Buscando el Descuento Configurado al Cliente.
       frmMain.frmTmp.qrEntradaPacienteDescuentoPorc.Value := DM.DescCliente(frmMain.frmTmp.ClienteFactura);
       frmMain.frmTmp.ActTotales;

       //Buscando el Cargo - Gasto Configurado al Cliente.
       DM.VerificarGastosVarios(frmMain.frmTmp.ClienteFactura, frmMain.frmTmp.qrEntradaPacienteRecid.value);
       frmMain.frmTmp.ActTotales;
}
/////// Llenar Los Parametros de los Pacientes. ////////////////////////////////
        if Factura_St = 'I' Then
        begin
           frmMain.frmTmp.qrEntradaPacienteResultadoPaciente.Value      := qrPacientesEnvioResultado.Value
        end
        else
        if Factura_St = 'M' Then
        begin
           frmMain.frmTmpMod.qrEntradaPacienteResultadoPaciente.Value   := qrPacientesEnvioResultado.Value;
        end
        else
        if Factura_St = 'L' Then
        begin
           frmMain.frmTmpLab.qrEntradaPacienteResultadoPaciente.Value   := qrPacientesEnvioResultado.Value;
        end
        else
        if Factura_St = 'C' Then
        begin
           frmMain.frmClinica.qrEntradaPacienteResultadoPaciente.Value  := qrPacientesEnvioResultado.Value;
        end
        else
        if Factura_St = 'N' Then
        begin
           frmMain.frmTmpNCR.qrEntradaPacienteResultadoPaciente.Value  := qrPacientesEnvioResultado.Value;
        end
        else
        if Factura_St = 'F' Then
        begin
           frmMain.frmTmpND.qrEntradaPacienteResultadoPaciente.Value  := qrPacientesEnvioResultado.Value;
        end;

////WILLIAMS
//     frmMain.frmTmp.qrentradaPacientePublicarInternet.value := qrPacientesPublicarInternet.Value;
///
//       frmMain.frmTmp.qrentradaPacientePublicarInternet.value := qrPacientesSiempreInternet.Value;

        if Factura_St = 'I' Then
        begin
           if frmMain.frmTmp.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoSeg.Value then
            begin
             if (qrPacientesCobrarDiferencia.Value = 1) then
              begin
                frmMain.frmTmp.EliminarDescuentoAplicado1Click(Nil);
    //            frmMain.frmTmp.qrEntradaPacienteDescuentoValor.Value := 0;
    //            frmMain.frmTmp.ActTotales;
              end;
            end;
           If ( (frmMain.frmTmp.qrEntradaPacienteOrigen.IsNull) Or
                (frmMain.frmTmp.qrEntradaPacienteOrigen.Value = '') Or
                (frmMain.frmTmp.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoVip.Value) Or
                (frmMain.frmTmp.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoAcc.Value) Or
                (frmMain.frmTmp.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoEmp.Value) Or
                (frmMain.frmTmp.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoSeg.Value) Or
                (frmMain.frmTmp.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoPriv.Value) ) Then
             Begin
               frmMain.frmTmp.qrEntradaPacienteClienteID.Value := '';
               frmMain.frmTmp.Agregar_Clientes(qrPacientesClienteID.Value);
             End;
        end else if Factura_St = 'M' Then
        begin
           if frmMain.frmTmpMod.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoSeg.Value then
            begin
             if (qrPacientesCobrarDiferencia.Value = 1) then
              begin
                frmMain.frmTmpMod.EliminarDescuentoAplicado1Click(Nil);
    //            frmMain.frmTmp.qrEntradaPacienteDescuentoValor.Value := 0;
    //            frmMain.frmTmp.ActTotales;
              end;
            end;
             If ( (frmMain.frmTmpMod.qrEntradaPacienteOrigen.IsNull) Or
                  (frmMain.frmTmpMod.qrEntradaPacienteOrigen.Value = '') Or
                  (frmMain.frmTmpMod.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoVip.Value) Or
                  (frmMain.frmTmpMod.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoAcc.Value) Or
                  (frmMain.frmTmpMod.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoEmp.Value) Or
                  (frmMain.frmTmpMod.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoSeg.Value) Or
                  (frmMain.frmTmpMod.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoPriv.Value) ) Then
               Begin
                 frmMain.frmTmpMod.qrEntradaPacienteClienteID.Value := '';
                 frmMain.frmTmpMod.Agregar_Clientes(qrPacientesClienteID.Value);
               End;
        end else if Factura_St = 'L' Then
        begin
           if frmMain.frmTmpLab.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoSeg.Value then
            begin
             if (qrPacientesCobrarDiferencia.Value = 1) then
              begin
                frmMain.frmTmpLab.EliminarDescuentoAplicado1Click(Nil);
    //            frmMain.frmTmp.qrEntradaPacienteDescuentoValor.Value := 0;
    //            frmMain.frmTmp.ActTotales;
              end;
            end;
             If ( (frmMain.frmTmpLab.qrEntradaPacienteOrigen.IsNull) Or
                  (frmMain.frmTmpLab.qrEntradaPacienteOrigen.Value = '') Or
                  (frmMain.frmTmpLab.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoVip.Value) Or
                  (frmMain.frmTmpLab.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoAcc.Value) Or
                  (frmMain.frmTmpLab.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoEmp.Value) Or
                  (frmMain.frmTmpMod.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoSeg.Value) Or
                  (frmMain.frmTmpLab.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoPriv.Value) ) Then
               Begin
                 frmMain.frmTmpLab.qrEntradaPacienteClienteID.Value := '';
                 frmMain.frmTmpLab.Agregar_Clientes(qrPacientesClienteID.Value);
               End;
        end else if Factura_St = 'C' Then
        begin
           if frmMain.frmClinica.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoSeg.Value then
            begin
             if (qrPacientesCobrarDiferencia.Value = 1) then
              begin
                frmMain.frmClinica.EliminarDescuentoAplicado1Click(Nil);
              end;
            end;
             If ( (frmMain.frmClinica.qrEntradaPacienteOrigen.IsNull) Or
                  (frmMain.frmClinica.qrEntradaPacienteOrigen.Value = '') Or
                  (frmMain.frmClinica.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoVip.Value) Or
                  (frmMain.frmClinica.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoAcc.Value) Or
                  (frmMain.frmClinica.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoEmp.Value) Or
                  (frmMain.frmClinica.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoPriv.Value) ) Then
               Begin
                 frmMain.frmClinica.qrEntradaPacienteClienteID.Value := '';
                 frmMain.frmClinica.Agregar_Clientes(qrPacientesClienteID.Value);
               End;
        end else if Factura_St = 'N' Then
        begin
           if frmMain.frmTmpNCR.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoSeg.Value then
            begin
             if (qrPacientesCobrarDiferencia.Value = 1) then
              begin
                frmMain.frmTmpNCR.EliminarDescuentoAplicado1Click(Nil);
              end;
            end;
             If ( (frmMain.frmTmpNCR.qrEntradaPacienteOrigen.IsNull) Or
                  (frmMain.frmTmpNCR.qrEntradaPacienteOrigen.Value = '') Or
                  (frmMain.frmTmpNCR.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoVip.Value) Or
                  (frmMain.frmTmpNCR.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoAcc.Value) Or
                  (frmMain.frmTmpNCR.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoEmp.Value) Or
                  (frmMain.frmTmpNCR.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoPriv.Value) ) Then
               Begin
                 frmMain.frmTmpNCR.qrEntradaPacienteClienteID.Value := '';
                 frmMain.frmTmpNCR.Agregar_Clientes(qrPacientesClienteID.Value);
               End;
        end else if Factura_St = 'F' Then
        begin
           if frmMain.frmTmpND.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoSeg.Value then
            begin
             if (qrPacientesCobrarDiferencia.Value = 1) then
              begin
                frmMain.frmTmpND.EliminarDescuentoAplicado1Click(Nil);
              end;
            end;
             If ( (frmMain.frmTmpND.qrEntradaPacienteOrigen.IsNull) Or
                  (frmMain.frmTmpND.qrEntradaPacienteOrigen.Value = '') Or
                  (frmMain.frmTmpND.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoVip.Value) Or
                  (frmMain.frmTmpND.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoAcc.Value) Or
                  (frmMain.frmTmpND.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoEmp.Value) Or
                  (frmMain.frmTmpND.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoPriv.Value) ) Then
               Begin
                 frmMain.frmTmpND.qrEntradaPacienteClienteID.Value := '';
                 frmMain.frmTmpND.Agregar_Clientes(qrPacientesClienteID.Value);
               End;
        end;

/////// Llenar Los Parametros de los Pacientes. ////////////////////////////////
{
       frmMain.frmTmp.qrEntradaPacienteDescuentoPorc.Value := DM.DescCliente(ClienteFactura);
       DM.VerificarGastosVarios(ClienteFactura,frmMain.frmTmp.qrEntradaPacienteRecid.value);
       frmMain.frmTmp.ActTotales;

       frmMain.frmTmp.qrEntradaPacienteClienteID.Value := qrPacientesSeguroID.Value;
       frmMain.frmTmp.qrEntradaPacienteClienteNombre.Value := qfind.FieldByName('Nombre').AsString;
       frmMain.frmTmp.qrEntradaPacientePolizaID.Value := qrPacientesPolizaSeguro.Value;
       frmMain.frmTmp.qrentradapacienteorigen.Value := qfind.FieldByName('Origen').AsInteger;
}
       //Validando Los Parametros de Descuentos.
//       frmMain.frmTmp.Val_Descuento;
//       frmMain.frmTmp.VerificarPagoDiferencia;
//       frmMain.frmTmp.ActTotales;

// OJO - BLOQUEADO PARA DAR MAYOR RAPIDEZ.       frmMain.frmTmp.RefrescarInterface;

     end;
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
   If (frmMain.Exis_Cli = True) And (frmMain.Tran_fer <> True) then
     Begin
       qfindciudad := DM.Find_Ldr('Select * from PTCIUDAD Where CiudadID = :ciu', qrPacientesCiudadID.AsString);
        frmMain.frmClinica.qrEntradaPacientePacienteID.Value := qrPacientesClienteID.Value;
       frmMain.frmClinica.qrEntradaPacienteNombrePaciente.Value := qrPacientesNombre.Value;
       frmMain.frmClinica.qrEntradaPacienteDireccion.Value := qrPacientesDireccion.Value;
       frmMain.frmClinica.qrEntradaPacienteTelefonos.Value := qrPacientesTelefono.Value;
       frmMain.frmClinica.qrEntradaPacienteTelefono2.Value := qrPacientesTelefono2.Value;
       frmMain.frmClinica.qrEntradaPacienteFax.Value := qrPacientesFax.Value;
       frmMain.frmClinica.qrEntradaPacienteEmail.Value := qrPacientesEMail.Value;
       frmMain.frmClinica.qrEntradaPacienteSexo.Value := qrPacientesSexo.Value;
//       frmMain.frmClinica.qrEntradaPacienteFECHANACIMIENTO.Value := qrPacientesFECHANACIMIENTO.Value;
       frmMain.frmClinica.qrEntradaPacienteEdadPaciente.Value := Trunc((StrtoInt(FormatDateTime('yyyymmdd', DM.SystemDate))-StrtoInt(FormatDateTime('yyyymmdd', qrPacientesFechaNacimiento.Value)))/10000);
       If qfindciudad.RecordCount > 0 then
         frmMain.frmClinica.qrEntradaPacienteDireccion.Value := frmMain.frmClinica.qrEntradaPacienteDireccion.Value + #13 +
                                                                    qfindciudad.FieldByName('Descripcion').AsString;

/////// Llenar Los Parametros de los Pacientes. ////////////////////////////////
       frmMain.frmClinica.qrEntradaPacienteResultadoPaciente.Value := qrPacientesEnvioResultado.Value;
       frmMain.frmClinica.qrentradaPacientePublicarInternet.value := qrPacientesPublicarInternet.Value;

       if frmMain.frmClinica.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoSeg.Value then
        begin
         if (qrPacientesCobrarDiferencia.Value = 1) then
          begin
            frmMain.frmClinica.EliminarDescuentoAplicado1Click(Nil);
          end;
        end;

       //Validando Los Parametros de Descuentos.
//       frmMain.frmClinica.Val_Descuento;
//       frmMain.frmClinica.VerificarPagoDiferencia;
//       frmMain.frmClinica.ActTotales;

// OJO - BLOQUEADO PARA DAR MAYOR RAPIDEZ.       frmMain.frmClinica.RefrescarInterface;

        If ( (frmMain.frmClinica.qrEntradaPacienteOrigen.IsNull) Or
            (frmMain.frmClinica.qrEntradaPacienteOrigen.Value = '') Or
            (frmMain.frmClinica.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoVip.Value) Or
            (frmMain.frmClinica.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoAcc.Value) Or
            (frmMain.frmClinica.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoEmp.Value) Or
            (frmMain.frmClinica.qrEntradaPacienteOrigen.Value = DM.qrParametroGrupoPriv.Value) ) Then
        Begin
           frmMain.frmClinica.qrEntradaPacienteClienteID.Value := '';
           frmMain.frmClinica.Agregar_Clientes(qrPacientesClienteID.Value);
        End;
     end;
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
  If (frmMain.Tran_fer = True) then
  Begin
      frmMain.frmTransferencia.EdPaciente.Text := qrPacientesClienteID.AsString;
      frmMain.frmTransferencia.EdPacienteNombre.Text := qrPacientesNombre.AsString;
  end;

    FreeAndNil(qfindCiudad);
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
  end;
end;


end.

