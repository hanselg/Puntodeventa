//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2443
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2443.
// 
unit wsSimetricaconsulting.simetricaws;

interface

uses System.Diagnostics, 
  System.Xml.Serialization, 
  System.Web.Services.Protocols, 
  System.ComponentModel, 
  System.Web.Services, System.Web.Services.Description;

type
  CBase = class;
  User = class;
  Afiliado = class;
  PSS = class;
  Autorizacion = class;
  Cobertura = class;
  Aseguradora = class;
  Cancelacion = class;
  TArrayOfCobertura = array of Cobertura;
  TArrayOfAseguradora = array of Aseguradora;
  /// <remarks/>
  
  [System.Diagnostics.DebuggerStepThroughAttribute]
  [System.ComponentModel.DesignerCategoryAttribute('code')]
  [System.Web.Services.WebServiceBindingAttribute(Name='SimetricaWSSoap', Namespace='h' +
  'ttp://www.simetricaconsulting.com/webservices/Proveedores')]
  [System.Xml.Serialization.XmlIncludeAttribute(TypeOf(CBase))]
  SimetricaWS = class(System.Web.Services.Protocols.SoapHttpClientProtocol)
    /// <remarks/>
  public
    constructor Create;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/Test', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function Test: string;
    /// <remarks/>
    function BeginTest(callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndTest(asyncResult: System.IAsyncResult): string;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/Login', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function Login(email: string; password: string): User;
    /// <remarks/>
    function BeginLogin(email: string; password: string; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndLogin(asyncResult: System.IAsyncResult): User;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/ValidaAfiliado', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function ValidaAfiliado(token: string; codArs: Integer; codAfiliado: Int64; 
      codProveedor: Int64): Afiliado;
    /// <remarks/>
    function BeginValidaAfiliado(token: string; codArs: Integer; codAfiliado: Int64; 
      codProveedor: Int64; callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndValidaAfiliado(asyncResult: System.IAsyncResult): Afiliado;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/ValidaProveedor', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function ValidaProveedor(token: string; codArs: Integer; codProveedor: Int64): PSS;
    /// <remarks/>
    function BeginValidaProveedor(token: string; codArs: Integer; codProveedor: Int64; 
      callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndValidaProveedor(asyncResult: System.IAsyncResult): PSS;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/ValidaToken', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function ValidaToken(token: string): Boolean;
    /// <remarks/>
    function BeginValidaToken(token: string; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndValidaToken(asyncResult: System.IAsyncResult): Boolean;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/CotizacionPorMonto', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function CotizacionPorMonto(token: string; codArs: Integer; montoTotal: System.Double; 
      codAfiliado: Int64; codProveedor: Int64): Autorizacion;
    /// <remarks/>
    function BeginCotizacionPorMonto(token: string; codArs: Integer; montoTotal: System.Double; 
      codAfiliado: Int64; codProveedor: Int64; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndCotizacionPorMonto(asyncResult: System.IAsyncResult): Autorizacion;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/CotizacionPorCoberturas', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function CotizacionPorCoberturas(token: string; codArs: Integer; coberturas: TArrayOfCobertura; 
      codAfiliado: Int64; codProveedor: Int64): Autorizacion;
    /// <remarks/>
    function BeginCotizacionPorCoberturas(token: string; codArs: Integer; coberturas: TArrayOfCobertura; 
      codAfiliado: Int64; codProveedor: Int64; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndCotizacionPorCoberturas(asyncResult: System.IAsyncResult): Autorizacion;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/ReclamacionPorMonto', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function ReclamacionPorMonto(token: string; codArs: Integer; montoTotal: System.Double; 
      codAfiliado: Int64; codProveedor: Int64): Autorizacion;
    /// <remarks/>
    function BeginReclamacionPorMonto(token: string; codArs: Integer; montoTotal: System.Double; 
      codAfiliado: Int64; codProveedor: Int64; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndReclamacionPorMonto(asyncResult: System.IAsyncResult): Autorizacion;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/ReclamacionPorCoberturas', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function ReclamacionPorCoberturas(token: string; codArs: Integer; coberturas: TArrayOfCobertura; 
      codAfiliado: Int64; codProveedor: Int64): Autorizacion;
    /// <remarks/>
    function BeginReclamacionPorCoberturas(token: string; codArs: Integer; coberturas: TArrayOfCobertura; 
      codAfiliado: Int64; codProveedor: Int64; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndReclamacionPorCoberturas(asyncResult: System.IAsyncResult): Autorizacion;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/GetCoberturasMasUsadas', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function GetCoberturasMasUsadas(token: string; codArs: Integer; codProveedor: Int64): TArrayOfCobertura;
    /// <remarks/>
    function BeginGetCoberturasMasUsadas(token: string; codArs: Integer; codProveedor: Int64; 
      callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndGetCoberturasMasUsadas(asyncResult: System.IAsyncResult): TArrayOfCobertura;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/GetCoberturas', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function GetCoberturas(token: string; codArs: Integer; codProveedor: Int64): TArrayOfCobertura;
    /// <remarks/>
    function BeginGetCoberturas(token: string; codArs: Integer; codProveedor: Int64; 
      callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndGetCoberturas(asyncResult: System.IAsyncResult): TArrayOfCobertura;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/GetAseguradoras', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function GetAseguradoras(token: string): TArrayOfAseguradora;
    /// <remarks/>
    function BeginGetAseguradoras(token: string; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndGetAseguradoras(asyncResult: System.IAsyncResult): TArrayOfAseguradora;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/CancelaAutoriazcion', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function CancelaAutoriazcion(token: string; codArs: Integer; noReclamacion: Integer; 
      year: string; codAfiliado: Int64; codProveedor: Int64): Boolean;
    /// <remarks/>
    function BeginCancelaAutoriazcion(token: string; codArs: Integer; noReclamacion: Integer; 
      year: string; codAfiliado: Int64; codProveedor: Int64; callback: System.AsyncCallback; 
      asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndCancelaAutoriazcion(asyncResult: System.IAsyncResult): Boolean;
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute('http://www.s' +
    'imetricaconsulting.com/webservices/Proveedores/CancelarAutorizacion', RequestNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', ResponseNamespace='h' +
    'ttp://www.simetricaconsulting.com/webservices/Proveedores', Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    function CancelarAutorizacion(token: string; codArs: Integer; numeroSession: Int64): Cancelacion;
    /// <remarks/>
    function BeginCancelarAutorizacion(token: string; codArs: Integer; numeroSession: Int64; 
      callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
    /// <remarks/>
    function EndCancelarAutorizacion(asyncResult: System.IAsyncResult): Cancelacion;
  end;
  
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://www.simetrica' +
  'consulting.com/webservices/Proveedores')]
  User = class
    /// <remarks/>
  public
    Token: string;
    /// <remarks/>
    UserId: string;
    /// <remarks/>
    UserName: string;
    /// <remarks/>
    UserFullName: string;
  end;
  
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://www.simetrica' +
  'consulting.com/webservices/dbaper/')]
  Cancelacion = class
    /// <remarks/>
  public
    Estado: Boolean;
    /// <remarks/>
    Mensaje: string;
    /// <remarks/>
    CodigoSalida: string;
    /// <remarks/>
    ArsId: Integer;
    /// <remarks/>
    Session: Int64;
  end;
  
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://www.simetrica' +
  'consulting.com/webservices/Proveedores')]
  Aseguradora = class
    /// <remarks/>
  public
    Id: Integer;
    /// <remarks/>
    Codigo: string;
    /// <remarks/>
    Nombre: string;
    /// <remarks/>
    Url: string;
    /// <remarks/>
    ImageUrl: string;
    /// <remarks/>
    Estado: Boolean;
    /// <remarks/>
    Version: Integer;
    /// <remarks/>
    VersionCoberturas: Integer;
    /// <remarks/>
    FechaVersion: System.DateTime;
    /// <remarks/>
    FechaVersionCoberturas: System.DateTime;
    /// <remarks/>
    WsURL: string;
  end;
  
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://www.simetrica' +
  'consulting.com/webservices/dbaper/')]
  Cobertura = class
    /// <remarks/>
  public
    Codigo: string;
    /// <remarks/>
    Deducible: System.Double;
    /// <remarks/>
    Descripcion: string;
    /// <remarks/>
    MontoIndemizado: System.Double;
    /// <remarks/>
    MontoNoCubierto: System.Double;
    /// <remarks/>
    MontoTotal: System.Double;
    /// <remarks/>
    CodigoSalida: string;
    /// <remarks/>
    Error: string;
  end;
  
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://www.simetrica' +
  'consulting.com/webservices/dbaper/')]
  Autorizacion = class
    /// <remarks/>
  public
    NoReclamacion: Integer;
    /// <remarks/>
    DiferenciaAfiliado: System.Double;
    /// <remarks/>
    MontoArs: System.Double;
    /// <remarks/>
    ListaCoberturas: TArrayOfCobertura;
    /// <remarks/>
    Id: Integer;
    /// <remarks/>
    NumeroSession: Integer;
    /// <remarks/>
    Year: Integer;
    /// <remarks/>
    MontoTotal: System.Double;
  end;
  
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://www.simetrica' +
  'consulting.com/webservices/dbaper/')]
  PSS = class
    /// <remarks/>
  public
    IdProveedor: Integer;
    /// <remarks/>
    Codigo: string;
    /// <remarks/>
    Nombre: string;
    /// <remarks/>
    Estado: Boolean;
    /// <remarks/>
    Tipo: string;
    /// <remarks/>
    CodigoSalida: string;
  end;
  
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://www.simetrica' +
  'consulting.com/webservices/dbaper/')]
  Error = class
    /// <remarks/>
  public
    Descipcion: string;
    /// <remarks/>
    Code: Integer;
  end;
  
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://www.simetrica' +
  'consulting.com/webservices/dbaper/')]
  [System.Xml.Serialization.XmlIncludeAttribute(TypeOf(Afiliado))]
  CBase = class
    /// <remarks/>
  public
    Error: Error;
  end;
  
  /// <remarks/>
  
  [System.Xml.Serialization.XmlTypeAttribute(Namespace='http://www.simetrica' +
  'consulting.com/webservices/dbaper/')]
  Afiliado = class(CBase)
    /// <remarks/>
  public
    Nombre: string;
    /// <remarks/>
    Cedula: string;
    /// <remarks/>
    Codigo: string;
    /// <remarks/>
    CodigoSalida: string;
    /// <remarks/>
    Estado: Boolean;
    /// <remarks/>
    TipoPlan: string;
    /// <remarks/>
    Pasaporte: string;
    /// <remarks/>
    PrimerNombre: string;
    /// <remarks/>
    SegundoNombre: string;
    /// <remarks/>
    PrimerApellido: string;
    /// <remarks/>
    SegundoApellido: string;
    /// <remarks/>
    CodigoAsegurado: Int64;
  end;
  
implementation

{$AUTOBOX ON}
{$HINTS OFF}
{$WARNINGS OFF}

/// <remarks/>
constructor SimetricaWS.Create;
begin
  inherited Create;
  Self.Url := 'https://www.simetricaconsulting.net/simetricaws.asmx';
end;

/// <remarks/>
function SimetricaWS.Test: string;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('Test', New(TArrayOfSystem_Object, 0));
  Result := (string(results[0]));
end;

/// <remarks/>
function SimetricaWS.BeginTest(callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('Test', New(TArrayOfSystem_Object, 0), callback, 
      asyncState);
end;

/// <remarks/>
function SimetricaWS.EndTest(asyncResult: System.IAsyncResult): string;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (string(results[0]));
end;

/// <remarks/>
function SimetricaWS.Login(email: string; password: string): User;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('Login', TArrayOfSystem_Object.Create(email, password));
  Result := (User(results[0]));
end;

/// <remarks/>
function SimetricaWS.BeginLogin(email: string; password: string; callback: System.AsyncCallback; 
  asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('Login', TArrayOfSystem_Object.Create(email, password), 
      callback, asyncState);
end;

/// <remarks/>
function SimetricaWS.EndLogin(asyncResult: System.IAsyncResult): User;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (User(results[0]));
end;

/// <remarks/>
function SimetricaWS.ValidaAfiliado(token: string; codArs: Integer; codAfiliado: Int64; 
  codProveedor: Int64): Afiliado;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('ValidaAfiliado', TArrayOfSystem_Object.Create(token, 
          codArs, codAfiliado, codProveedor));
  Result := (Afiliado(results[0]));
end;

/// <remarks/>
function SimetricaWS.BeginValidaAfiliado(token: string; codArs: Integer; codAfiliado: Int64; 
  codProveedor: Int64; callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('ValidaAfiliado', TArrayOfSystem_Object.Create(token, 
          codArs, codAfiliado, codProveedor), callback, asyncState);
end;

/// <remarks/>
function SimetricaWS.EndValidaAfiliado(asyncResult: System.IAsyncResult): Afiliado;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Afiliado(results[0]));
end;

/// <remarks/>
function SimetricaWS.ValidaProveedor(token: string; codArs: Integer; codProveedor: Int64): PSS;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('ValidaProveedor', TArrayOfSystem_Object.Create(token, 
          codArs, codProveedor));
  Result := (PSS(results[0]));
end;

/// <remarks/>
function SimetricaWS.BeginValidaProveedor(token: string; codArs: Integer; codProveedor: Int64; 
  callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('ValidaProveedor', TArrayOfSystem_Object.Create(token, 
          codArs, codProveedor), callback, asyncState);
end;

/// <remarks/>
function SimetricaWS.EndValidaProveedor(asyncResult: System.IAsyncResult): PSS;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (PSS(results[0]));
end;

/// <remarks/>
function SimetricaWS.ValidaToken(token: string): Boolean;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('ValidaToken', TArrayOfSystem_Object.Create(token));
  Result := (Boolean(results[0]));
end;

/// <remarks/>
function SimetricaWS.BeginValidaToken(token: string; callback: System.AsyncCallback; 
  asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('ValidaToken', TArrayOfSystem_Object.Create(token), 
      callback, asyncState);
end;

/// <remarks/>
function SimetricaWS.EndValidaToken(asyncResult: System.IAsyncResult): Boolean;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Boolean(results[0]));
end;

/// <remarks/>
function SimetricaWS.CotizacionPorMonto(token: string; codArs: Integer; montoTotal: System.Double; 
  codAfiliado: Int64; codProveedor: Int64): Autorizacion;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('CotizacionPorMonto', TArrayOfSystem_Object.Create(token, 
          codArs, montoTotal, codAfiliado, codProveedor));
  Result := (Autorizacion(results[0]));
end;

/// <remarks/>
function SimetricaWS.BeginCotizacionPorMonto(token: string; codArs: Integer; 
  montoTotal: System.Double; codAfiliado: Int64; codProveedor: Int64; callback: System.AsyncCallback; 
  asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('CotizacionPorMonto', TArrayOfSystem_Object.Create(token, 
          codArs, montoTotal, codAfiliado, codProveedor), callback, asyncState);
end;

/// <remarks/>
function SimetricaWS.EndCotizacionPorMonto(asyncResult: System.IAsyncResult): Autorizacion;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Autorizacion(results[0]));
end;

/// <remarks/>
function SimetricaWS.CotizacionPorCoberturas(token: string; codArs: Integer; 
  coberturas: TArrayOfCobertura; codAfiliado: Int64; codProveedor: Int64): Autorizacion;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('CotizacionPorCoberturas', TArrayOfSystem_Object.Create(token, 
          codArs, coberturas, codAfiliado, codProveedor));
  Result := (Autorizacion(results[0]));
end;

/// <remarks/>
function SimetricaWS.BeginCotizacionPorCoberturas(token: string; codArs: Integer; 
  coberturas: TArrayOfCobertura; codAfiliado: Int64; codProveedor: Int64; callback: System.AsyncCallback; 
  asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('CotizacionPorCoberturas', TArrayOfSystem_Object.Create(token, 
          codArs, coberturas, codAfiliado, codProveedor), callback, asyncState);
end;

/// <remarks/>
function SimetricaWS.EndCotizacionPorCoberturas(asyncResult: System.IAsyncResult): Autorizacion;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Autorizacion(results[0]));
end;

/// <remarks/>
function SimetricaWS.ReclamacionPorMonto(token: string; codArs: Integer; montoTotal: System.Double; 
  codAfiliado: Int64; codProveedor: Int64): Autorizacion;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('ReclamacionPorMonto', TArrayOfSystem_Object.Create(token, 
          codArs, montoTotal, codAfiliado, codProveedor));
  Result := (Autorizacion(results[0]));
end;

/// <remarks/>
function SimetricaWS.BeginReclamacionPorMonto(token: string; codArs: Integer; 
  montoTotal: System.Double; codAfiliado: Int64; codProveedor: Int64; callback: System.AsyncCallback; 
  asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('ReclamacionPorMonto', TArrayOfSystem_Object.Create(token, 
          codArs, montoTotal, codAfiliado, codProveedor), callback, asyncState);
end;

/// <remarks/>
function SimetricaWS.EndReclamacionPorMonto(asyncResult: System.IAsyncResult): Autorizacion;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Autorizacion(results[0]));
end;

/// <remarks/>
function SimetricaWS.ReclamacionPorCoberturas(token: string; codArs: Integer; 
  coberturas: TArrayOfCobertura; codAfiliado: Int64; codProveedor: Int64): Autorizacion;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('ReclamacionPorCoberturas', TArrayOfSystem_Object.Create(token, 
          codArs, coberturas, codAfiliado, codProveedor));
  Result := (Autorizacion(results[0]));
end;

/// <remarks/>
function SimetricaWS.BeginReclamacionPorCoberturas(token: string; codArs: Integer; 
  coberturas: TArrayOfCobertura; codAfiliado: Int64; codProveedor: Int64; callback: System.AsyncCallback; 
  asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('ReclamacionPorCoberturas', TArrayOfSystem_Object.Create(token, 
          codArs, coberturas, codAfiliado, codProveedor), callback, asyncState);
end;

/// <remarks/>
function SimetricaWS.EndReclamacionPorCoberturas(asyncResult: System.IAsyncResult): Autorizacion;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Autorizacion(results[0]));
end;

/// <remarks/>
function SimetricaWS.GetCoberturasMasUsadas(token: string; codArs: Integer; codProveedor: Int64): TArrayOfCobertura;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('GetCoberturasMasUsadas', TArrayOfSystem_Object.Create(token, 
          codArs, codProveedor));
  Result := results[0] as TArrayOfCobertura;
end;

/// <remarks/>
function SimetricaWS.BeginGetCoberturasMasUsadas(token: string; codArs: Integer; 
  codProveedor: Int64; callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('GetCoberturasMasUsadas', TArrayOfSystem_Object.Create(token, 
          codArs, codProveedor), callback, asyncState);
end;

/// <remarks/>
function SimetricaWS.EndGetCoberturasMasUsadas(asyncResult: System.IAsyncResult): TArrayOfCobertura;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := results[0] as TArrayOfCobertura;
end;

/// <remarks/>
function SimetricaWS.GetCoberturas(token: string; codArs: Integer; codProveedor: Int64): TArrayOfCobertura;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('GetCoberturas', TArrayOfSystem_Object.Create(token, 
          codArs, codProveedor));
  Result := results[0] as TArrayOfCobertura;
end;

/// <remarks/>
function SimetricaWS.BeginGetCoberturas(token: string; codArs: Integer; codProveedor: Int64; 
  callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('GetCoberturas', TArrayOfSystem_Object.Create(token, 
          codArs, codProveedor), callback, asyncState);
end;

/// <remarks/>
function SimetricaWS.EndGetCoberturas(asyncResult: System.IAsyncResult): TArrayOfCobertura;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := results[0] as TArrayOfCobertura;
end;

/// <remarks/>
function SimetricaWS.GetAseguradoras(token: string): TArrayOfAseguradora;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('GetAseguradoras', TArrayOfSystem_Object.Create(token));
  Result := results[0] as TArrayOfAseguradora;
end;

/// <remarks/>
function SimetricaWS.BeginGetAseguradoras(token: string; callback: System.AsyncCallback; 
  asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('GetAseguradoras', TArrayOfSystem_Object.Create(token), 
      callback, asyncState);
end;

/// <remarks/>
function SimetricaWS.EndGetAseguradoras(asyncResult: System.IAsyncResult): TArrayOfAseguradora;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := results[0] as TArrayOfAseguradora;
end;

/// <remarks/>
function SimetricaWS.CancelaAutoriazcion(token: string; codArs: Integer; noReclamacion: Integer; 
  year: string; codAfiliado: Int64; codProveedor: Int64): Boolean;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('CancelaAutoriazcion', TArrayOfSystem_Object.Create(token, 
          codArs, noReclamacion, year, codAfiliado, codProveedor));
  Result := (Boolean(results[0]));
end;

/// <remarks/>
function SimetricaWS.BeginCancelaAutoriazcion(token: string; codArs: Integer; 
  noReclamacion: Integer; year: string; codAfiliado: Int64; codProveedor: Int64; 
  callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('CancelaAutoriazcion', TArrayOfSystem_Object.Create(token, 
          codArs, noReclamacion, year, codAfiliado, codProveedor), callback, 
      asyncState);
end;

/// <remarks/>
function SimetricaWS.EndCancelaAutoriazcion(asyncResult: System.IAsyncResult): Boolean;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Boolean(results[0]));
end;

/// <remarks/>
function SimetricaWS.CancelarAutorizacion(token: string; codArs: Integer; numeroSession: Int64): Cancelacion;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.Invoke('CancelarAutorizacion', TArrayOfSystem_Object.Create(token, 
          codArs, numeroSession));
  Result := (Cancelacion(results[0]));
end;

/// <remarks/>
function SimetricaWS.BeginCancelarAutorizacion(token: string; codArs: Integer; 
  numeroSession: Int64; callback: System.AsyncCallback; asyncState: System.Object): System.IAsyncResult;
type
  TArrayOfSystem_Object = array of System.Object;
begin
  Result := Self.BeginInvoke('CancelarAutorizacion', TArrayOfSystem_Object.Create(token, 
          codArs, numeroSession), callback, asyncState);
end;

/// <remarks/>
function SimetricaWS.EndCancelarAutorizacion(asyncResult: System.IAsyncResult): Cancelacion;
type
  TArrayOfSystem_Object = array of System.Object;
var
  results: TArrayOfSystem_Object;
begin
  results := Self.EndInvoke(asyncResult);
  Result := (Cancelacion(results[0]));
end;

end.
