unit DialogConsultaRelacionados;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DialogConsulta, cxGraphics, Menus, cxLookAndFeelPainters, cxStyles,
  cxCustomData, cxFilter, cxData, cxDataStorage, cxEdit, DB, cxDBData,
  cxGridCustomTableView, cxGridTableView, cxGridDBTableView, ADODB,
  dxLayoutControl, cxGridLevel, cxClasses, cxControls, cxGridCustomView, cxGrid,
  StdCtrls, cxButtons, cxTextEdit, cxContainer, cxMaskEdit, cxDropDownEdit,
  DialogCobro, cxImageComboBox, cxLookupEdit, cxDBLookupEdit,
  cxDBExtLookupComboBox, cxintl,dlgmensajes, cxLabel;

type
  TfrmDialogConsultaRelacionados = class(TfrmDialogConsulta)
    dbDatosClienteID: TcxGridDBColumn;
    dbDatosNombre: TcxGridDBColumn;
    dbDatosTelefono: TcxGridDBColumn;
    dbDatosTipo: TcxGridDBColumn;
    dbDatosCedula: TcxGridDBColumn;
    cxLabel1: TcxLabel;
    procedure FormCreate(Sender: TObject);
    procedure edbuscarPropertiesChange(Sender: TObject);
    procedure edtipoclienteExit(Sender: TObject);
    procedure cgDatosExit(Sender: TObject);
    procedure cgDatosEnter(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure FormShow(Sender: TObject);
    procedure BuscarData;
  private
    { Private declarations }
  public
    { Public declarations }
    procedure Run;
  end;

var
  frmDialogConsultaRelacionados: TfrmDialogConsultaRelacionados;
  adentrogrid, _buscar : Boolean;

implementation

uses DataModule, Main;

{$R *.dfm}


procedure TfrmDialogConsultaRelacionados.Run;
Var ClienteID : String;
begin
 _buscar := True;
 AdentroGrid := false;
 showmodal;
 if ModalResult = mrOk then
 begin
      if dm.qrClientes.recordcount > 0 then
      begin
           ClienteID := dm.qrClientes.Fieldbyname('ClienteID').AsString;
           dm.qrClientes.Close;
           dm.qrClientes.Filter:='ClienteID = ' + ClienteID;
           dm.qrClientes.Filtered := True;
           dm.qrClientes.Open;
      end;
 end;
end;

procedure TfrmDialogConsultaRelacionados.BuscarData;
var
 sqlString : String;
begin
 DM.qrParametro.Close;
 DM.qrParametro.Open;
 sqlString := 'SELECT c.*,g.Descripcion Tipo FROM PTCliente c Inner Join PtGrupoCliente g On c.GrupoCliente=g.GrupoCliente WHERE c.GrupoCliente IN ('+ #39 +
              DM.qrParametroGrupoVip.Value + #39 + ',' + #39 +
              DM.qrParametroGrupoAcc.Value + #39 + ',' + #39 +
              DM.qrParametroGrupoEmp.Value + #39 + ',' + #39 +
              DM.qrParametroGrupoPriv.Value + #39 + ') ';

 if edbuscar.Text <> '' then begin
   case edbuscarpor.ItemIndex of
     0 : sqlString := sqlString + ' AND c.ClienteID like '+#39+'%'+edbuscar.Text+'%'+#39;
     1 : sqlString := sqlString + ' AND c.Nombre like '+#39+'%'+edbuscar.Text+'%'+#39;
     2 : sqlString := sqlString + ' AND c.Identificacion like '+#39+'%'+edbuscar.Text+'%'+#39;
     3 : sqlString := sqlString + ' AND c.Telefono like '+#39+'%'+edbuscar.Text+'%'+#39;
   end;
 end;

 If (Trim(edbuscar.Text) = EmptyStr) or (Length(Trim(edbuscar.Text)) < 5) then
 begin
      EtMensajeDlg('Debe escribir criterio de búsqueda más exacto en el Texto.  Verifique.', etAviso, [etOk],0, dm.Imagenes.Items[4].Bitmap,true);
      edbuscar.SetFocus;
      Exit;
 end;

 sqlString := sqlString + ' AND c.DataAreaId = ' + #39 + DM.CurEmpresa + #39+' AND g.DataAreaId = ' + #39 + DM.CurEmpresa + #39;
 sqlString := sqlString + ' ORDER BY ClienteID ';

 DM.qrClientes.Close;
 DM.qrClientes.SQL.Text := sqlString;
 DM.qrClientes.Open;
end;

procedure TfrmDialogConsultaRelacionados.cgDatosEnter(Sender: TObject);
begin
  inherited;
  adentrogrid := True;
  _buscar := False;
end;

procedure TfrmDialogConsultaRelacionados.cgDatosExit(Sender: TObject);
begin
  inherited;
  adentrogrid := False;
  _buscar := True;
end;

procedure TfrmDialogConsultaRelacionados.FormCreate(Sender: TObject);
begin
  inherited;
  edbuscarpor.ItemIndex := 1;
  dm.qrClientes.Close;
  dm.qrClientes.Filtered := False;
  dm.qrClientes.Open;
end;

procedure TfrmDialogConsultaRelacionados.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  inherited;
  if (key = Vk_Down) and (not AdentroGrid) then
     PostMessage(Handle, Wm_NextDlgCtl, 0, 0);

  if (key = 13) and (not AdentroGrid) then
     PostMessage(Handle, Wm_NextDlgCtl, 0, 0);

  if (key = Vk_Up) and (not AdentroGrid) then
     PostMessage(Handle, Wm_NextDlgCtl, 1, 0);

  if (key = 13) and (AdentroGrid) then
    begin
      Close;
      ModalResult := mrOk;
    end;

  if (key = 13) and (_buscar) then
    begin
      If (AdentroGrid) then
        Begin
          Close;
          ModalResult := mrOk;
        end
      Else
        BuscarData;
    end;

  if (key = 27) then
    begin
      Close;
    end;

  if (key = vk_f9) then
    begin
      Close;

      if (dm.qrClientes.RecordCount >0) then
        ModalResult := mrOk;
    end;
end;

procedure TfrmDialogConsultaRelacionados.FormShow(Sender: TObject);
begin
  inherited;
  _buscar := True;
  adentrogrid := False;
  edbuscar.SetFocus;
  DM.qrClientes.Close;
end;


procedure TfrmDialogConsultaRelacionados.edbuscarPropertiesChange(
  Sender: TObject);
begin
  inherited;
  _buscar := True;
  adentrogrid := False;
end;

procedure TfrmDialogConsultaRelacionados.edtipoclienteExit(Sender: TObject);
begin
  inherited;
  _buscar := True;
  adentrogrid := False;
end;

end.

